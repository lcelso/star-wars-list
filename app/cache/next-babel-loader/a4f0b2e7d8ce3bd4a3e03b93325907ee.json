{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/celsoalves/Public/projects/star-wars-quiz/components/Select/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query CharNames($number: Int) {\\n    charsNames(page: $number) {\\n      characters {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport LoadingComponent from \"../Loading\";\nimport ErrorComponent from \"../Error\";\nvar CHARSNAMES = gql(_templateObject());\n\nvar Select = function Select(_ref) {\n  var onChoice = _ref.onChoice;\n\n  var _useQuery = useQuery(CHARSNAMES, {\n    variables: {\n      number: 1\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(LoadingComponent, {\n    icon: \"ThreeDots\",\n    height: \"40\",\n    width: \"40\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  });\n  if (error) return __jsx(ErrorComponent, {\n    error: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  });\n  var characters = data.charsNames.characters;\n  var chars = characters.sort(function (a, b) {\n    if (a.name < b.name) return -1;\n    if (a.name > b.name) return 1;\n    return 0;\n  });\n  return __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return onChoice(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"option\", {\n    value: \"DEFAULT\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Selecione\"), chars.map(function (item) {\n    return __jsx(\"option\", {\n      key: item.id,\n      value: item.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, item.name);\n  }));\n};\n\nexport default Select;","map":{"version":3,"sources":["/Users/celsoalves/Public/projects/star-wars-quiz/components/Select/index.js"],"names":["React","gql","useQuery","styled","LoadingComponent","ErrorComponent","CHARSNAMES","Select","onChoice","variables","number","data","loading","error","characters","charsNames","chars","sort","a","b","name","e","target","value","map","item","id"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,cAAP,MAA2B,UAA3B;AAEA,IAAMC,UAAU,GAAGL,GAAH,mBAAhB;;AAWA,IAAMM,MAAM,GAAG,SAATA,MAAS,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACEN,QAAQ,CAACI,UAAD,EAAa;AACpDG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AADyC,GAAb,CADV;AAAA,MACvBC,IADuB,aACvBA,IADuB;AAAA,MACjBC,OADiB,aACjBA,OADiB;AAAA,MACRC,KADQ,aACRA,KADQ;;AAK/B,MAAID,OAAJ,EAAa,OAAO,MAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAmC,IAAA,MAAM,EAAC,IAA1C;AAA+C,IAAA,KAAK,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AANoB,MAQTC,UARS,GAQOH,IARP,CAQvBI,UARuB,CAQTD,UARS;AAS/B,MAAME,KAAK,GAAGF,UAAU,CAACG,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtC,QAAGD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAd,EAAoB,OAAO,CAAC,CAAR;AACpB,QAAGF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAd,EAAoB,OAAO,CAAP;AACpB,WAAO,CAAP;AACD,GAJa,CAAd;AAMA,SACE;AACE,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGGP,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAlB;AAAsB,MAAA,KAAK,EAAED,IAAI,CAACL,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCK,IAAI,CAACL,IAA9C,CADS;AAAA,GAAV,CAHH,CADF;AASD,CAxBD;;AA0BA,eAAeb,MAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\n\nimport LoadingComponent from '@components/Loading';\nimport ErrorComponent from '@components/Error';\n\nconst CHARSNAMES = gql`\n  query CharNames($number: Int) {\n    charsNames(page: $number) {\n      characters {\n        id\n        name\n      }\n    }\n  }\n`\n\nconst Select = ({ onChoice }) => {\n  const { data, loading, error } = useQuery(CHARSNAMES, {\n    variables: { number: 1 },\n  });\n\n  if (loading) return <LoadingComponent icon=\"ThreeDots\" height=\"40\" width=\"40\" />;\n  if (error) return <ErrorComponent error={error} />\n  \n  const { charsNames: { characters }} = data;\n  const chars = characters.sort((a, b) => {\n    if(a.name < b.name) return -1;\n    if(a.name > b.name) return 1;\n    return 0;\n  });\n\n  return (\n    <select\n      onChange={e => onChoice(e.target.value)}>\n      <option value=\"DEFAULT\">Selecione</option>\n      {chars.map((item) => (\n        <option key={item.id} value={item.name}>{item.name}</option> \n      ))}\n    </select>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}