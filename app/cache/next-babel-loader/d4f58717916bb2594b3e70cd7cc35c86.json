{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Picture($name: String) {\\n    picture(name: $name)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport LoadingComponent from \"../Loading\";\nimport ErrorComponent from \"../Error\";\nvar PICTURE = gql(_templateObject());\nvar indisponivel = '/images/indisponivel.png';\nvar Color = styled.span.withConfig({\n  displayName: \"Picture__Color\",\n  componentId: \"wyesjz-0\"\n})([\"background-image:url('\", \"');background-size:cover;height:200px;width:200px;display:flex;\"], function (props) {\n  return props.bgImage ? props.bgImage : indisponivel;\n});\n\nvar Picture = function Picture(item) {\n  var name = item.name;\n\n  var _useQuery = useQuery(PICTURE, {\n    variables: {\n      name: name\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(LoadingComponent, {\n    icon: \"ThreeDots\",\n    height: \"40\",\n    width: \"40\"\n  });\n  if (error) return __jsx(ErrorComponent, {\n    error: error\n  });\n  return __jsx(Color, {\n    bgImage: data.picture\n  });\n};\n\nexport default Picture;","map":null,"metadata":{},"sourceType":"module"}