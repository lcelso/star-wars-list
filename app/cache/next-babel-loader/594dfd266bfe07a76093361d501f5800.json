{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from '../hocs/withApollo';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { PointsConsumer } from '../context/Points';\nimport PictureComponent from \"../components/Picture\";\nimport LoadingComponent from \"../components/Loading\";\nimport ErrorComponent from \"../components/Error\";\nimport HeaderComponent from \"../components/Header\";\nconst CHAR = gql`\n  query Char($number: Int) {\n    char(page: $number) {\n      characters {\n        id\n        name\n        height\n        mass\n        gender\n        homeworld\n      }\n    }\n  }\n`;\nconst Grid = styled.div.withConfig({\n  displayName: \"details__Grid\",\n  componentId: \"iprogc-0\"\n})([\"display:grid;grid-template-columns:repeat(1,1fr);grid-template-rows:repeat(1,1fr);justify-items:center;align-items:center;\"]);\nconst Card = styled.div.withConfig({\n  displayName: \"details__Card\",\n  componentId: \"iprogc-1\"\n})([\"background-image:url('/images/card_open.png');width:311.88px;height:500px;display:flex;justify-content:center;align-items:center;border-radius:30px;margin:20px 0;\"]);\nconst List = styled.ul.withConfig({\n  displayName: \"details__List\",\n  componentId: \"iprogc-2\"\n})([\"list-style:none;background:#FFFFFF;padding:15px;margin-top:110px;color:#000000;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"details__Button\",\n  componentId: \"iprogc-3\"\n})([\"background-color:#FCE62E;color:#000000;border:none;font-size:14px;padding:20px;font-weight:bold;outline:none;\"]);\n\nconst User = ({\n  user,\n  props\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(CHAR, {\n    variables: {\n      number: user\n    }\n  });\n  if (loading) return __jsx(LoadingComponent, {\n    icon: \"Puff\",\n    height: \"100\",\n    width: \"100\"\n  });\n  if (error) return __jsx(ErrorComponent, {\n    error: error\n  });\n  const {\n    char: {\n      characters\n    }\n  } = data;\n  return __jsx(PointsConsumer, {\n    value: props\n  }, context => {\n    const actCorrects = context.correct;\n    const actErrors = context.error;\n    const actPoints = context.points;\n\n    if (characters[0].name === context.choice) {\n      context.points = actPoints + 10;\n      context.correct = actCorrects + 1;\n    } else {\n      context.points = actPoints - 10;\n      context.error = actErrors + 1;\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Grid, null, __jsx(HeaderComponent, {\n      total: context\n    }), __jsx(Card, null, __jsx(List, null, __jsx(\"li\", null, __jsx(PictureComponent, {\n      name: characters[0].name\n    })), __jsx(\"li\", null, \"Name: \", characters[0].name), __jsx(\"li\", null, \"Height: \", characters[0].height), __jsx(\"li\", null, \"Mass: \", characters[0].mass), __jsx(\"li\", null, \"Gender: \", characters[0].gender))), __jsx(Link, {\n      href: \"/\"\n    }, __jsx(Button, null, \"Voltar para home\"))));\n  });\n};\n\nUser.getInitialProps = async ({\n  query: {\n    id\n  }\n}) => {\n  const char = parseInt(id);\n  return {\n    user: char\n  };\n};\n\nexport default withApollo(User);","map":null,"metadata":{},"sourceType":"module"}