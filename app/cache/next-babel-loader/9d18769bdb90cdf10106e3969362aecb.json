{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Char($number: Int) {\\n    char(page: $number) {\\n      characters {\\n        id\\n        name\\n        height\\n        mass\\n        gender\\n        homeworld\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from '../hocs/withApollo';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { PointsConsumer } from '../context/Points';\nimport PictureComponent from \"../components/Picture\";\nimport LoadingComponent from \"../components/Loading\";\nimport ErrorComponent from \"../components/Error\";\nimport HeaderComponent from \"../components/Header\";\nvar CHAR = gql(_templateObject());\nvar Grid = styled.div.withConfig({\n  displayName: \"details__Grid\",\n  componentId: \"iprogc-0\"\n})([\"display:grid;grid-template-columns:repeat(1,1fr);grid-template-rows:repeat(1,1fr);justify-items:center;align-items:center;\"]);\nvar Card = styled.div.withConfig({\n  displayName: \"details__Card\",\n  componentId: \"iprogc-1\"\n})([\"background-image:url('/images/card_open.png');width:311.88px;height:500px;display:flex;justify-content:center;align-items:center;border-radius:30px;margin:20px 0;\"]);\nvar List = styled.ul.withConfig({\n  displayName: \"details__List\",\n  componentId: \"iprogc-2\"\n})([\"list-style:none;background:#FFFFFF;padding:15px;margin-top:110px;color:#000000;\"]);\nvar Button = styled.button.withConfig({\n  displayName: \"details__Button\",\n  componentId: \"iprogc-3\"\n})([\"background-color:#FCE62E;color:#000000;border:none;font-size:14px;padding:20px;font-weight:bold;outline:none;\"]);\n\nvar User = function User(_ref) {\n  var user = _ref.user,\n      props = _ref.props;\n\n  var _useQuery = useQuery(CHAR, {\n    variables: {\n      number: user\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(LoadingComponent, {\n    icon: \"Puff\",\n    height: \"100\",\n    width: \"100\"\n  });\n  if (error) return __jsx(ErrorComponent, {\n    error: error\n  });\n  var characters = data[\"char\"].characters;\n  return __jsx(PointsConsumer, {\n    value: props\n  }, function (context) {\n    var actCorrects = context.correct;\n    var actErrors = context.error;\n    var actPoints = context.points;\n\n    if (characters[0].name === context.choice) {\n      context.points = actPoints + 10;\n      context.correct = actCorrects + 1;\n    } else {\n      context.points = actPoints - 10;\n      context.error = actErrors + 1;\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Grid, null, __jsx(HeaderComponent, {\n      total: context\n    }), __jsx(Card, null, __jsx(List, null, __jsx(\"li\", null, __jsx(PictureComponent, {\n      name: characters[0].name\n    })), __jsx(\"li\", null, \"Name: \", characters[0].name), __jsx(\"li\", null, \"Height: \", characters[0].height), __jsx(\"li\", null, \"Mass: \", characters[0].mass), __jsx(\"li\", null, \"Gender: \", characters[0].gender))), __jsx(Link, {\n      href: \"/\"\n    }, __jsx(Button, null, \"Voltar para home\"))));\n  });\n};\n\nUser.getInitialProps = function _callee(_ref2) {\n  var id, _char;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = _ref2.query.id;\n          _char = parseInt(id);\n          return _context.abrupt(\"return\", {\n            user: _char\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default withApollo(User);","map":null,"metadata":{},"sourceType":"module"}