{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport LoadingComponent from \"../Loading\";\nimport ErrorComponent from \"../Error\";\nconst CHARSNAMES = gql`\n  query CharNames($number: Int) {\n    charsNames(page: $number) {\n      characters {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst Select = ({\n  onChoice\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(CHARSNAMES, {\n    variables: {\n      number: 1\n    }\n  });\n  if (loading) return __jsx(LoadingComponent, {\n    icon: \"ThreeDots\",\n    height: \"40\",\n    width: \"40\"\n  });\n  if (error) return __jsx(ErrorComponent, {\n    error: error\n  });\n  const {\n    charsNames: {\n      characters\n    }\n  } = data;\n  const chars = characters.sort((a, b) => {\n    if (a.name < b.name) return -1;\n    if (a.name > b.name) return 1;\n    return 0;\n  });\n  return __jsx(\"select\", {\n    onChange: e => onChoice(e.target.value)\n  }, __jsx(\"option\", {\n    value: \"DEFAULT\"\n  }, \"Selecione\"), chars.map(item => __jsx(\"option\", {\n    key: item.id,\n    value: item.name\n  }, item.name)));\n};\n\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}