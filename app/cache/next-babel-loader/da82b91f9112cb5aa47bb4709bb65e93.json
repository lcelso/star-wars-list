{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query AllCharacters($number: Int) {\\n    allCharacters(page: $number) {\\n      characters {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { withApollo } from '../hocs/withApollo';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { PointsConsumer } from '../context/Points';\nimport LoadingComponent from \"../components/Loading\";\nimport ErrorComponent from \"../components/Error\";\nimport HeaderComponent from \"../components/Header\";\nimport SelectComponent from \"../components/Select\";\nvar ALLCHARACTERS = gql(_templateObject());\nvar Grid = styled.div.withConfig({\n  displayName: \"pages__Grid\",\n  componentId: \"f4aolq-0\"\n})([\"display:grid;grid-template-columns:repeat(5,1fr);grid-template-rows:repeat(2,1fr);grid-column-gap:5px;grid-row-gap:20px;justify-items:center;align-items:center;@media only screen  and (min-device-width:375px)  and (max-device-width:812px){grid-template-columns:repeat(2,1fr);}\"]);\nvar numberRandom = Math.floor(Math.random() * (4 - 1 + 1) + 1);\nvar url = \"/images/card_close_v\".concat(numberRandom, \".png\");\nvar Card = styled.div.withConfig({\n  displayName: \"pages__Card\",\n  componentId: \"f4aolq-1\"\n})([\"background-image:url(\", \");width:187px;height:315px;display:flex;justify-content:center;align-items:center;color:#000000;\"], url);\nvar List = styled.ul.withConfig({\n  displayName: \"pages__List\",\n  componentId: \"f4aolq-2\"\n})([\"list-style:none;padding:0;margin:220px 0 0 0;\"]);\nvar Button = styled.button.withConfig({\n  displayName: \"pages__Button\",\n  componentId: \"f4aolq-3\"\n})([\"background-color:#FCE62E;color:#000000;border:none;font-size:14px;margin-top:5px;width:100%;font-weight:bold;outline:none;\"]);\n\nvar Index = function Index(props) {\n  var _useState = useState(''),\n      choice = _useState[0],\n      setChoice = _useState[1];\n\n  var _useQuery = useQuery(ALLCHARACTERS, {\n    variables: {\n      number: 1\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(LoadingComponent, {\n    icon: \"Puff\",\n    height: \"100\",\n    width: \"100\"\n  });\n  if (error) return __jsx(ErrorComponent, {\n    error: error\n  });\n  var characters = data.allCharacters.characters;\n\n  function handleChoice(value) {\n    setChoice(value);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(PointsConsumer, {\n    value: props\n  }, function (context) {\n    return __jsx(React.Fragment, null, __jsx(HeaderComponent, {\n      total: context\n    }), __jsx(Grid, null, characters.map(function (item) {\n      return context.choice = choice, __jsx(Card, {\n        key: item.id\n      }, __jsx(List, null, __jsx(\"li\", null, __jsx(SelectComponent, {\n        onChoice: handleChoice\n      })), __jsx(\"li\", null, __jsx(Link, {\n        href: \"/details?id=\".concat(item.id)\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return context.chosen = item.id;\n        }\n      }, \"See\")))));\n    })));\n  }));\n};\n\nexport default withApollo(Index);","map":null,"metadata":{},"sourceType":"module"}