{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar dtos = require('../../dtos/Characters');\n\nvar dtosChar = require('../../dtos/Characters/char');\n\nvar dtosListChar = require('../../dtos/Characters/list-chars');\n\nvar chars = require('../../utils/chars-mock');\n\nmodule.exports = {\n  Query: {\n    allCharacters: function allCharacters(_, _ref, _ref2) {\n      var page, dataLoaders, response;\n      return _regeneratorRuntime.async(function allCharacters$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              page = _ref.page;\n              dataLoaders = _ref2.dataLoaders;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(dataLoaders.charactersLoader.load(page));\n\n            case 4:\n              response = _context.sent;\n\n              if (!(response === 404)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", dtos.characters(chars[\"default\"]));\n\n            case 7:\n              return _context.abrupt(\"return\", dtos.characters(response));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    \"char\": function char(_, _ref3, _ref4) {\n      var page, dataLoaders, response;\n      return _regeneratorRuntime.async(function char$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              page = _ref3.page;\n              dataLoaders = _ref4.dataLoaders;\n              chars[\"default\"].page = page;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(dataLoaders.charactersLoader.load(page));\n\n            case 5:\n              response = _context2.sent;\n\n              if (!(response === 404)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", dtosChar.characters(chars[\"default\"]));\n\n            case 8:\n              return _context2.abrupt(\"return\", dtos.characters(response));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    charsNames: function charsNames(_, _ref5, _ref6) {\n      var page, dataLoaders, response;\n      return _regeneratorRuntime.async(function charsNames$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              page = _ref5.page;\n              dataLoaders = _ref6.dataLoaders;\n              chars[\"default\"].page = page;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(dataLoaders.charactersLoader.load(page));\n\n            case 5:\n              response = _context3.sent;\n\n              if (!(response === 404)) {\n                _context3.next = 8;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", dtosListChar.characters(chars[\"default\"]));\n\n            case 8:\n              return _context3.abrupt(\"return\", dtos.characters(response));\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}