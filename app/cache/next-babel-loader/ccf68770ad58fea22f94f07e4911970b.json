{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { withApollo } from '../hocs/withApollo';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { PointsConsumer } from '../context/Points';\nimport LoadingComponent from \"../components/Loading\";\nimport ErrorComponent from \"../components/Error\";\nimport HeaderComponent from \"../components/Header\";\nimport SelectComponent from \"../components/Select\";\nconst ALLCHARACTERS = gql`\n  query AllCharacters($number: Int) {\n    allCharacters(page: $number) {\n      characters {\n        id\n        name\n      }\n    }\n  }\n`;\nconst Grid = styled.div.withConfig({\n  displayName: \"pages__Grid\",\n  componentId: \"f4aolq-0\"\n})([\"display:grid;grid-template-columns:repeat(5,1fr);grid-template-rows:repeat(2,1fr);grid-column-gap:5px;grid-row-gap:20px;justify-items:center;align-items:center;@media only screen  and (min-device-width:375px)  and (max-device-width:812px){grid-template-columns:repeat(2,1fr);}\"]);\nconst numberRandom = Math.floor(Math.random() * (4 - 1 + 1) + 1);\nconst url = `/images/card_close_v${numberRandom}.png`;\nconst Card = styled.div.withConfig({\n  displayName: \"pages__Card\",\n  componentId: \"f4aolq-1\"\n})([\"background-image:url(\", \");width:187px;height:315px;display:flex;justify-content:center;align-items:center;color:#000000;\"], url);\nconst List = styled.ul.withConfig({\n  displayName: \"pages__List\",\n  componentId: \"f4aolq-2\"\n})([\"list-style:none;padding:0;margin:220px 0 0 0;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"pages__Button\",\n  componentId: \"f4aolq-3\"\n})([\"background-color:#FCE62E;color:#000000;border:none;font-size:14px;margin-top:5px;width:100%;font-weight:bold;outline:none;\"]);\n\nconst Index = props => {\n  const {\n    0: choice,\n    1: setChoice\n  } = useState('');\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ALLCHARACTERS, {\n    variables: {\n      number: 1\n    }\n  });\n  if (loading) return __jsx(LoadingComponent, {\n    icon: \"Puff\",\n    height: \"100\",\n    width: \"100\"\n  });\n  if (error) return __jsx(ErrorComponent, {\n    error: error\n  });\n  const {\n    allCharacters: {\n      characters\n    }\n  } = data;\n\n  function handleChoice(value) {\n    setChoice(value);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(PointsConsumer, {\n    value: props\n  }, context => {\n    return __jsx(React.Fragment, null, __jsx(HeaderComponent, {\n      total: context\n    }), __jsx(Grid, null, characters.map(item => (context.choice = choice, __jsx(Card, {\n      key: item.id\n    }, __jsx(List, null, __jsx(\"li\", null, __jsx(SelectComponent, {\n      onChoice: handleChoice\n    })), __jsx(\"li\", null, __jsx(Link, {\n      href: `/details?id=${item.id}`\n    }, __jsx(Button, {\n      onClick: () => context.chosen = item.id\n    }, \"See\")))))))));\n  }));\n};\n\nexport default withApollo(Index);","map":null,"metadata":{},"sourceType":"module"}