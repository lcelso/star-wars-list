{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query CharNames($number: Int) {\\n    charsNames(page: $number) {\\n      characters {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport LoadingComponent from \"../Loading\";\nimport ErrorComponent from \"../Error\";\nvar CHARSNAMES = gql(_templateObject());\n\nvar Select = function Select(_ref) {\n  var onChoice = _ref.onChoice;\n\n  var _useQuery = useQuery(CHARSNAMES, {\n    variables: {\n      number: 1\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(LoadingComponent, {\n    icon: \"ThreeDots\",\n    height: \"40\",\n    width: \"40\"\n  });\n  if (error) return __jsx(ErrorComponent, {\n    error: error\n  });\n  var characters = data.charsNames.characters;\n  var chars = characters.sort(function (a, b) {\n    if (a.name < b.name) return -1;\n    if (a.name > b.name) return 1;\n    return 0;\n  });\n  return __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return onChoice(e.target.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"DEFAULT\"\n  }, \"Selecione\"), chars.map(function (item) {\n    return __jsx(\"option\", {\n      key: item.id,\n      value: item.name\n    }, item.name);\n  }));\n};\n\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}